// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// 1. MULTI-TENANCY & AUTHENTICATION
// ============================================

model Company {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  users     User[]
  boqs      BOQ[]
  
  @@map("companies")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  
  role      UserRole @default(ESTIMATOR)
  
  companyId String
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  createdBOQs BOQ[]  @relation("BOQCreator")
  
  @@map("users")
}

enum UserRole {
  OWNER
  ESTIMATOR
  TEAM_MEMBER
}

// ============================================
// 2. KSMM CLAUSE LIBRARY
// ============================================

model KSMMClause {
  id              String  @id @default(uuid())
  sectionCode     String  // A, B, C, D, etc.
  section         String  // A1, B2, F16, etc.
  contents        String  // "General Rules", "Concrete Work"
  clauseTitle     String
  clauseReference String  @db.Text
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  boqItems  BOQItem[]
  
  @@index([sectionCode])
  @@map("ksmm_clauses")
}

// ============================================
// 3. BOQ MANAGEMENT
// ============================================

model BOQ {
  id           String    @id @default(uuid())
  boqNumber    String    // e.g., "BOQ-2025-001"
  projectName  String
  clientName   String
  clientEmail  String
  clientPhone  String?
  
  // Versioning
  version      String    @default("A") // A, B, C for revisions
  
  // Status tracking
  status       BOQStatus @default(DRAFT)
  
  // Financial
  totalAmount  Decimal   @default(0) @db.Decimal(15, 2)
  currency     String    @default("KES")
  
  // Creator
  createdById  String
  createdBy    User      @relation("BOQCreator", fields: [createdById], references: [id])
  
  companyId    String
  company      Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)
  
  // Metadata
  notes        String?   @db.Text
  
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  // Relations
  items        BOQItem[]
  followUps    BOQFollowUp[]
  
  @@unique([companyId, boqNumber])
  @@index([status])
  @@index([companyId])
  @@map("boqs")
}

enum BOQStatus {
  DRAFT
  SUBMITTED
  UNDER_REVIEW
  NEGOTIATING
  ACCEPTED
  REJECTED
  WITHDRAWN
}

model BOQItem {
  id          String  @id @default(uuid())
  itemNumber  String  // e.g., "1.1", "2.3.1"
  
  boqId       String
  boq         BOQ     @relation(fields: [boqId], references: [id], onDelete: Cascade)
  
  // KSMM Reference (optional - allows custom items)
  ksmmClauseId String?
  ksmmClause   KSMMClause? @relation(fields: [ksmmClauseId], references: [id])
  
  // Item details
  description String  @db.Text
  unit        String  // m³, m², m, No, Item, etc.
  quantity    Decimal @db.Decimal(15, 3)
  rate        Decimal @db.Decimal(15, 2)
  amount      Decimal @db.Decimal(15, 2) // quantity * rate
  
  // Order
  sortOrder   Int
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([boqId])
  @@map("boq_items")
}

model BOQFollowUp {
  id        String   @id @default(uuid())
  
  boqId     String
  boq       BOQ      @relation(fields: [boqId], references: [id], onDelete: Cascade)
  
  sentById  String
  
  subject   String
  message   String   @db.Text
  sentAt    DateTime @default(now())
  
  // Email tracking
  emailSent Boolean  @default(false)
  
  createdAt DateTime @default(now())
  
  @@index([boqId])
  @@map("boq_follow_ups")
}
